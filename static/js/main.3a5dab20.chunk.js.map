{"version":3,"sources":["Pages/Resume.tsx","Components/PageBar.tsx","Components/SocialMedia.tsx","Components/NavigationBar.tsx","Components/KeyWords.tsx","Pages/Home.tsx","Components/Section.tsx","Pages/AboutMe.tsx","Components/Toggle.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Content","PageBar","pageNames","Object","values","Pages","className","map","page","lineForActive","style","this","props","activePage","key","onClick","changePage","React","Component","SocialMedia","href","target","rel","NavigationBar","handleScroll","prevScrollpos","state","currentScrollPos","window","pageYOffset","visible","setState","addEventListener","removeEventListener","barStatus","KeyWords","Carousel","controls","indicators","interval","words","word","Item","Home","src","width","alt","Section","title","date","content","line","index","image","AboutMe","sections","data","id","text","Toggle","buttons","option","activeDoc","toggleDoc","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","numOfPages","currPage","doc","downloadFiles","displayedDoc","file","availability","Transcript","nameToDownload","download","pageChange","height","pageNumber","renderAnnotationLayer","renderTextLayer","side","position","leftButton","rightButton","prevPage","nextPage","nextOp","num","App","getPage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a5dab20.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Resume.css'\r\nimport Toggle from '../Components/Toggle'\r\nimport { Document, Page, pdfjs } from 'react-pdf'\r\nimport { FaDownload } from 'react-icons/fa';\r\nimport { FaFilePdf } from 'react-icons/fa';\r\nimport { FaFileWord } from 'react-icons/fa';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport enum Content {\r\n    Resume = \"Resume\",\r\n    Transcript = \"Transcript\"\r\n}\r\n\r\ninterface ResumeState {\r\n    activeDoc: Content,\r\n    numOfPages: number,\r\n    currPage: number\r\n}\r\n\r\nexport default class Resume extends React.Component<{}, ResumeState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeDoc: Content.Resume,\r\n            numOfPages: 1,\r\n            currPage: 1\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"pdf-control\">\r\n                    <Toggle activeDoc={this.state.activeDoc} toggleDoc={(doc: Content) => this.toggleDoc(doc)} />\r\n                    <span />\r\n                    {this.downloadFiles()}\r\n                </div>\r\n                {this.displayedDoc(this.state.activeDoc)}\r\n            </div>\r\n        )\r\n    }\r\n    private downloadFiles() {\r\n        var file = \"resume\"\r\n        var availability = \"\"\r\n        if (this.state.activeDoc === Content.Transcript) {\r\n            file = \"transcript\"\r\n            availability = \"unavailable\"\r\n        }\r\n        var nameToDownload = \"ElisaJTodd_\" + file\r\n        return (\r\n            <div className=\"download\">\r\n                <div>\r\n                    <FaDownload className=\"main-icon\" />\r\n                </div>\r\n                    <button >\r\n                        <a className={availability} href={file + \".docx\"} download={nameToDownload}>\r\n                        <div>Download docx</div>\r\n                        <FaFileWord className=\"icon \" /> \r\n                        </a>\r\n                    </button>\r\n                    <button>\r\n                        <a href={file + \".pdf\"} download={nameToDownload}>\r\n                        <div>Download PDF</div>\r\n                        <FaFilePdf className=\"icon\" />\r\n                        </a>\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n    private displayedDoc(activeDoc: Content) {\r\n        var file = \"resume.pdf\"\r\n        if (activeDoc === Content.Transcript) {\r\n            file = \"transcript.pdf\"\r\n        }\r\n        return (\r\n            <div>\r\n                <Document className=\"document\" file={file}> \r\n                    {this.pageChange(0)}\r\n                    {this.pageChange(1)}\r\n                    <Page height={1200} pageNumber={this.state.currPage} renderAnnotationLayer={false} renderTextLayer={false} />\r\n                   \r\n                </Document>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    private pageChange(side: number) {\r\n        if (this.state.numOfPages === 1) {\r\n            return (\r\n                <div/>\r\n            )\r\n        }\r\n        var position = \"page-controls \" + (side === 0 ? \"up\" : \"down\")\r\n        var leftButton = (this.state.currPage === 1 ? \"inactive\" : \"\")\r\n        var rightButton = (this.state.currPage === this.state.numOfPages ? \"inactive\" : \"\")\r\n        return (\r\n            <div className={position}>\r\n                <button className={leftButton} onClick={() => { if (this.state.currPage !== 1) this.prevPage() }}>{'‹'}</button>\r\n                <span>Page {this.state.currPage} of {this.state.numOfPages}</span>\r\n                <button className={rightButton} onClick={() => { if (this.state.currPage !== this.state.numOfPages) this.nextPage() }}>{'›'}</button>\r\n            </div>\r\n        )\r\n    }\r\n    private toggleDoc(nextOp: Content) {\r\n        var num = 1;\r\n        if (this.state.activeDoc === Content.Resume) num = 3;\r\n        this.setState({ activeDoc: nextOp, numOfPages: num, currPage: 1 })\r\n    }\r\n    private nextPage() {\r\n        this.setState({ currPage: this.state.currPage + 1 })\r\n    }\r\n    private prevPage() {\r\n        this.setState({ currPage: this.state.currPage - 1 })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Pages } from '../App'\r\nimport './PageBar.css'\r\n\r\ninterface PageBarProps{\r\n    activePage: Pages;\r\n    changePage: (page:Pages) => void;\r\n}\r\n\r\nexport default class PageBar extends React.Component <PageBarProps>{\r\n    render(){\r\n        const pageNames = Object.values(Pages);\r\n        return(\r\n            <div className=\"line\">\r\n                {pageNames.map((page:Pages)=> this.lineForActive(page))}\r\n            </div>\r\n        )\r\n    }\r\n    private lineForActive(page:Pages){\r\n        let style = \"default\";\r\n        if(this.props.activePage === page){\r\n            style = \"purple\";\r\n        }\r\n        return(\r\n            <div className={style} key={page} onClick={() => this.props.changePage(page)}> \r\n                {page}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './SocialMedia.css'\r\n\r\nexport default class SocialMedia extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"media\">\r\n                <a href=\"https://www.linkedin.com/in/elisa-jimenez-todd/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-linkedin\"> </a>\r\n                <a href=\"https://github.com/ElisaJTodd/Projects\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-github\"> </a>\r\n                <a href=\"https://www.facebook.com/elisajtodde/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-facebook\"> </a>\r\n                <a href=\"https://twitter.com/elisajtodd\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-twitter\"> </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Pages } from '../App'\r\nimport './NavigationBar.css'\r\nimport PageBar from './PageBar'\r\nimport SocialMedia from './SocialMedia'\r\n\r\ninterface NavigationBarProps {\r\n  activePage: Pages;\r\n  changePage: (page: Pages) => void;\r\n}\r\n\r\ninterface NavigationBarState {\r\n  prevScrollpos: number;\r\n  visible: boolean;\r\n}\r\n\r\nexport default class NavigationBar extends React.Component<NavigationBarProps, NavigationBarState>{\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      prevScrollpos: window.pageYOffset,\r\n      visible: true\r\n    };\r\n  }\r\n\r\n  // Adds an event listener when the component is mount.\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  // Remove the event listener when the component is unmount.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  // Hide or show the menu.\r\n  handleScroll = () => {\r\n    const { prevScrollpos } = this.state;\r\n\r\n    const currentScrollPos = window.pageYOffset;\r\n    const visible = prevScrollpos > currentScrollPos || currentScrollPos < 25;\r\n\r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      visible\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let barStatus = \"Bar\";\r\n    if (!this.state.visible) {\r\n      barStatus += \" Bar--hidden\"\r\n    }\r\n    return (\r\n      <div className={barStatus}>\r\n        <div className=\"bar-spacer\" />\r\n        <PageBar activePage={this.props.activePage} changePage={this.props.changePage} />\r\n        <SocialMedia />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport './KeyWords.css'\r\n\r\ninterface KeyWordsProps{\r\n    words: string[]\r\n}\r\n\r\nexport default class KeyWords extends React.Component <KeyWordsProps>{\r\n    render() {\r\n        return (\r\n            <Carousel controls={false} indicators={false} interval={2000}>\r\n                {this.props.words.map((word: string)=> <Carousel.Item key={word}> {word} </Carousel.Item>)}\r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport KeyWords from '../Components/KeyWords'\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"back-home-img\">\r\n                    <img src=\"Sevilla_saturated.jpg\" width=\"100%\" alt=\"Elisa in Sevilla\" />\r\n                </div>\r\n                <span className=\"over-purple\" />\r\n                <div className=\"hello\">\r\n                    <span className=\"tab\"> Hi!</span>\r\n                    <div className=\"iam\">\r\n                        <span>I'm </span>\r\n                        <span className=\"keywords\">\r\n                            <KeyWords words={[\"Elisa\", \"a Problem Solver\", \"Creative\", \"Dedicated\", \"Passionate\"]}/>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"description\">\r\n                    <p>I am a junior majoring in Computer Science at <b>The University of Texas at El Paso</b><br />\r\n                    currently working as an Instructional Assistant for fundamental Computer Science courses at UTEP.<br /> \r\n                    On my free time, I love solving puzzles and making crafts.<br />\r\n                    Navigate this page to learn more about me!\r\n                </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Section.css';\r\n\r\ninterface SectionProps {\r\n    title: string;\r\n    date: string;\r\n    content: string[];\r\n    image?: string;\r\n}\r\n\r\nexport default class Section extends React.Component<SectionProps>{\r\n    render() {\r\n        return(\r\n            <div className=\"section-box\">\r\n                <div className=\"text-portion\">\r\n                    <h2>{this.props.title}<hr/></h2>\r\n                    <p className=\"date\">{this.props.date}</p>\r\n                    {this.props.content.map(\r\n                        (line, index)=>{\r\n                            return(\r\n                                <p key={index}>{line}</p>\r\n                            )\r\n                        }\r\n                    )}\r\n                </div>\r\n                <div className=\"break\"/>\r\n                <div className=\"image-section\">\r\n                    <img src={this.props.image} alt = \"None available.\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"./AboutMe.css\"\r\nimport Section from \"../Components/Section\"\r\nimport data from '../Data/AboutMe.json';\r\n\r\nexport default class AboutMe extends React.Component {\r\n    render() {\r\n        let sections = data.map((data)=>{\r\n            return(\r\n                <Section key={data.id} title = {data.title} date = {data.date} content = {data.text} image = {data.image}  />\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"statement\">\r\n               {sections}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Content } from '../Pages/Resume'\r\nimport './Toggle.css'\r\n\r\ninterface ToggleProps {\r\n    activeDoc: Content;\r\n    toggleDoc: (activeDoc:Content) => void;\r\n}\r\n\r\nexport default class Toggle extends React.Component<ToggleProps>{\r\n    render() {\r\n        const buttons = Object.values(Content);\r\n        return (\r\n            <div className=\"toggle\">\r\n                {buttons.map((option:Content)=> this.lineForActive(option))}\r\n            </div>\r\n        );\r\n    }    \r\n    private lineForActive(option:Content){\r\n        let style = \"\";\r\n        if(this.props.activeDoc === option){\r\n            style += \" active-btn\";\r\n        }\r\n        return(\r\n            <div className={style} key={option} onClick={() => this.props.toggleDoc(option)}> \r\n                {option}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport NavigationBar from './Components/NavigationBar'\r\nimport Home from './Pages/Home'\r\nimport AboutMe from './Pages/AboutMe'\r\nimport Resume from './Pages/Resume'\r\nimport './App.css';\r\n\r\nexport enum Pages{\r\n  Home = \"Home\",\r\n  AboutMe = \"About Me\",\r\n  Resume = \"Resume\"\r\n}\r\n\r\nclass App extends React.Component <{}, {activePage: Pages}>{\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = { activePage: Pages.Home };\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <NavigationBar activePage={this.state.activePage} changePage={(page:Pages) => this.changePage(page)}/>\r\n        <div className=\"App-content\">\r\n          {this.getPage()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  private getPage(){\r\n    switch(this.state.activePage){\r\n      case Pages.Home:\r\n        return <Home/>;\r\n      case Pages.AboutMe:\r\n        return <AboutMe/>;\r\n      case Pages.Resume:\r\n        return <Resume/>;\r\n    }\r\n  }\r\n  private changePage(nextPage:Pages){\r\n    this.setState({activePage: nextPage})\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}