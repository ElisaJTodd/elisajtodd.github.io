{"version":3,"sources":["Pages/Resume.tsx","Components/PageBar.tsx","Components/SocialMedia.tsx","Components/NavigationBar.tsx","Components/KeyWords.tsx","Pages/Home.tsx","Pages/AboutMe.tsx","Components/Toggle.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Content","PageBar","pageNames","Object","values","Pages","className","map","page","lineForActive","style","this","props","activePage","key","onClick","changePage","React","Component","SocialMedia","href","target","rel","NavigationBar","handleScroll","prevScrollpos","state","currentScrollPos","window","pageYOffset","visible","setState","addEventListener","removeEventListener","barStatus","KeyWords","id","data-ride","data-pause","data-interval","Home","src","height","alt","AboutMe","Toggle","buttons","option","activeDoc","toggleDoc","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","numOfPages","currPage","doc","downloadFiles","displayedDoc","file","availability","Transcript","nameToDownload","download","pageChange","pageNumber","renderAnnotationLayer","renderTextLayer","side","position","leftButton","rightButton","prevPage","nextPage","nextOp","num","App","getPage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79549c74.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Resume.css'\r\nimport Toggle from '../Components/Toggle'\r\nimport { Document, Page, pdfjs } from 'react-pdf'\r\nimport { FaDownload } from 'react-icons/fa';\r\nimport { FaFilePdf } from 'react-icons/fa';\r\nimport { FaFileWord } from 'react-icons/fa';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport enum Content {\r\n    Resume = \"Resume\",\r\n    Transcript = \"Transcript\"\r\n}\r\n\r\ninterface ResumeState {\r\n    activeDoc: Content,\r\n    numOfPages: number,\r\n    currPage: number\r\n}\r\n\r\nexport default class Resume extends React.Component<{}, ResumeState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeDoc: Content.Resume,\r\n            numOfPages: 1,\r\n            currPage: 1\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"pdf-control\">\r\n                    <Toggle activeDoc={this.state.activeDoc} toggleDoc={(doc: Content) => this.toggleDoc(doc)} />\r\n                    <span />\r\n                    {this.downloadFiles()}\r\n                </div>\r\n                {this.displayedDoc(this.state.activeDoc)}\r\n            </div>\r\n        )\r\n    }\r\n    private downloadFiles() {\r\n        var file = \"resume\"\r\n        var availability = \"\"\r\n        if (this.state.activeDoc === Content.Transcript) {\r\n            file = \"transcript\"\r\n            availability = \"unavailable\"\r\n        }\r\n        var nameToDownload = \"ElisaJTodd_\" + file\r\n        return (\r\n            <div className=\"download\">\r\n                <div>\r\n                    <FaDownload className=\"main-icon\" />\r\n                </div>\r\n                    <button >\r\n                        <a className={availability} href={file + \".docx\"} download={nameToDownload}>\r\n                        <div>Download docx</div>\r\n                        <FaFileWord className=\"icon \" /> \r\n                        </a>\r\n                    </button>\r\n                    <button>\r\n                        <a href={file + \".pdf\"} download={nameToDownload}>\r\n                        <div>Download PDF</div>\r\n                        <FaFilePdf className=\"icon\" />\r\n                        </a>\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n    private displayedDoc(activeDoc: Content) {\r\n        var file = \"resume.pdf\"\r\n        if (activeDoc === Content.Transcript) {\r\n            file = \"transcript.pdf\"\r\n        }\r\n        return (\r\n            <div>\r\n                <Document className=\"document\" file={file}> \r\n                    {this.pageChange(0)}\r\n                    {this.pageChange(1)}\r\n                    <Page height={1200} pageNumber={this.state.currPage} renderAnnotationLayer={false} renderTextLayer={false} />\r\n                   \r\n                </Document>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    private pageChange(side: number) {\r\n        if (this.state.numOfPages === 1) {\r\n            return (\r\n                <div/>\r\n            )\r\n        }\r\n        var position = \"page-controls \" + (side === 0 ? \"up\" : \"down\")\r\n        var leftButton = (this.state.currPage === 1 ? \"inactive\" : \"\")\r\n        var rightButton = (this.state.currPage === this.state.numOfPages ? \"inactive\" : \"\")\r\n        return (\r\n            <div className={position}>\r\n                <button className={leftButton} onClick={() => { if (this.state.currPage !== 1) this.prevPage() }}>{'‹'}</button>\r\n                <span>Page {this.state.currPage} of {this.state.numOfPages}</span>\r\n                <button className={rightButton} onClick={() => { if (this.state.currPage !== this.state.numOfPages) this.nextPage() }}>{'›'}</button>\r\n            </div>\r\n        )\r\n    }\r\n    private toggleDoc(nextOp: Content) {\r\n        var num = 1;\r\n        if (this.state.activeDoc === Content.Resume) num = 3;\r\n        this.setState({ activeDoc: nextOp, numOfPages: num, currPage: 1 })\r\n    }\r\n    private nextPage() {\r\n        this.setState({ currPage: this.state.currPage + 1 })\r\n    }\r\n    private prevPage() {\r\n        this.setState({ currPage: this.state.currPage - 1 })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Pages } from '../App'\r\nimport './PageBar.css'\r\n\r\ninterface PageBarProps{\r\n    activePage: Pages;\r\n    changePage: (page:Pages) => void;\r\n}\r\n\r\nexport default class PageBar extends React.Component <PageBarProps>{\r\n    render(){\r\n        const pageNames = Object.values(Pages);\r\n        return(\r\n            <div className=\"line\">\r\n                {pageNames.map((page:Pages)=> this.lineForActive(page))}\r\n            </div>\r\n        )\r\n    }\r\n    private lineForActive(page:Pages){\r\n        let style = \"default\";\r\n        if(this.props.activePage === page){\r\n            style = \"purple\";\r\n        }\r\n        return(\r\n            <div className={style} key={page} onClick={() => this.props.changePage(page)}> \r\n                {page}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './SocialMedia.css'\r\n\r\nexport default class SocialMedia extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"media\">\r\n                <a href=\"https://www.linkedin.com/in/elisa-jimenez-todd/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-linkedin\"> </a>\r\n                <a href=\"https://github.com/ElisaJTodd/Projects\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-github\"> </a>\r\n                <a href=\"https://www.facebook.com/elisajtodde/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-facebook\"> </a>\r\n                <a href=\"https://twitter.com/elisajtodd\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-twitter\"> </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Pages } from '../App'\r\nimport './NavigationBar.css'\r\nimport PageBar from './PageBar'\r\nimport SocialMedia from './SocialMedia'\r\n\r\ninterface NavigationBarProps {\r\n  activePage: Pages;\r\n  changePage: (page: Pages) => void;\r\n}\r\n\r\ninterface NavigationBarState {\r\n  prevScrollpos: number;\r\n  visible: boolean;\r\n}\r\n\r\nexport default class NavigationBar extends React.Component<NavigationBarProps, NavigationBarState>{\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      prevScrollpos: window.pageYOffset,\r\n      visible: true\r\n    };\r\n  }\r\n\r\n  // Adds an event listener when the component is mount.\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  // Remove the event listener when the component is unmount.\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  // Hide or show the menu.\r\n  handleScroll = () => {\r\n    const { prevScrollpos } = this.state;\r\n\r\n    const currentScrollPos = window.pageYOffset;\r\n    const visible = prevScrollpos > currentScrollPos || currentScrollPos < 25;\r\n\r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      visible\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let barStatus = \"Bar\";\r\n    if (!this.state.visible) {\r\n      barStatus += \" Bar--hidden\"\r\n    }\r\n    return (\r\n      <div className={barStatus}>\r\n        <div className=\"bar-spacer\" />\r\n        <PageBar activePage={this.props.activePage} changePage={this.props.changePage} />\r\n        <SocialMedia />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './KeyWords.css'\r\n\r\nexport default class KeyWords extends React.Component{\r\n    render() {\r\n        return (\r\n            <div id=\"carouselExampleSlidesOnly\" className=\"carousel slide box pointer-event\" data-ride=\"carousel\" data-pause={false} data-interval=\"3000\" >\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        Elisa Jiménez Todd\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        Passionate\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        Dedicated\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        a Problem Solver\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        Creative\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport KeyWords from '../Components/KeyWords'\r\n\r\nexport default class Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"home\">\r\n                <div className=\"lefth\">\r\n                    <h1><div className=\"gray\">Hi!</div></h1>\r\n                    <h1>\r\n                        <div className=\"iam\">\r\n                            <div className=\"gray\">I'm </div><KeyWords/>\r\n                        </div>\r\n                    </h1>\r\n                    <p className=\"description\">I am a junior majoring in Computer Science at The University of Texas at El Paso.<br/><br/>\r\n                    I work as an Instructional Assistant for fundamental Computer Science classes at UTEP helping students understand and reach a solution to their CS problems.<br/><br/>\r\n                    I love solving puzzles and doing crafts which is why I can take on any challenge and find practical solutions to any problem! </p>\r\n                </div>\r\n                <div className=\"righth\">\r\n                    <img src=\"ElisaJTodd.jpg\" height =\"100%\" alt=\"Elisa in Toledo\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport \"./AboutMe.css\"\r\n\r\nexport default class AboutMe extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"statement\">\r\n                <p>\r\n                    I had few exposures to what coding was on High School. My last semester, our class learned to program on LOGO and Visual Basic. \r\n                    I fell in love with what computers could do then, or more accurately what I could make a computer do. \r\n                    For my first semester of College, learning the basics of coding and problem solving in Introduction to Computer Science was amazing. \r\n                    I felt that with only if statements, loops, and arrays I could do just about anything. \r\n                    Each day, I am learning more things about CS that widen my view of the possibilities and I keep finding each new topic very exciting. \r\n                    I find myself looking for any opportunity to develop my skills and learn from the outside.\r\n                    I am very happy to say that I am now working as an Instructional Assistant for the class of Elementary Data Structures, also known as CS2, and have begun working with Google in a Research Mentorship Program. \r\n                    I hope that I can obtain internships such as Google’s STEP soon so that I start developing my skills on another environment and learn more about CS.\r\n                </p>\r\n                <p>\r\n                    I had few exposures to what coding was on High School. My last semester, our class learned to program on LOGO and Visual Basic. \r\n                    I fell in love with what computers could do then, or more accurately what I could make a computer do. \r\n                    For my first semester of College, learning the basics of coding and problem solving in Introduction to Computer Science was amazing. \r\n                    I felt that with only if statements, loops, and arrays I could do just about anything. \r\n                    Each day, I am learning more things about CS that widen my view of the possibilities and I keep finding each new topic very exciting. \r\n                    I find myself looking for any opportunity to develop my skills and learn from the outside.\r\n                    I am very happy to say that I am now working as an Instructional Assistant for the class of Elementary Data Structures, also known as CS2, and have begun working with Google in a Research Mentorship Program. \r\n                    I hope that I can obtain internships such as Google’s STEP soon so that I start developing my skills on another environment and learn more about CS.\r\n                </p>\r\n                <p>\r\n                    I had few exposures to what coding was on High School. My last semester, our class learned to program on LOGO and Visual Basic. \r\n                    I fell in love with what computers could do then, or more accurately what I could make a computer do. \r\n                    For my first semester of College, learning the basics of coding and problem solving in Introduction to Computer Science was amazing. \r\n                    I felt that with only if statements, loops, and arrays I could do just about anything. \r\n                    Each day, I am learning more things about CS that widen my view of the possibilities and I keep finding each new topic very exciting. \r\n                    I find myself looking for any opportunity to develop my skills and learn from the outside.\r\n                    I am very happy to say that I am now working as an Instructional Assistant for the class of Elementary Data Structures, also known as CS2, and have begun working with Google in a Research Mentorship Program. \r\n                    I hope that I can obtain internships such as Google’s STEP soon so that I start developing my skills on another environment and learn more about CS.\r\n                </p>\r\n                <p>\r\n                    My strongest programming language is Java. \r\n                    This is the language that I first learned to code on and have been coding in it for almost a year and a half. \r\n                    Plus, as an Instructional Assistant, understanding and debugging Java is part of my everyday work. \r\n                    I am now using Python for my classes and found it easy to transfer to it given that I already had skills like indentation developed, and Python is very forgiving with variable declarations, semicolons, and printing among other things.\r\n                    I made many school projects with Java, some more challenging than others. \r\n                    I have made programs to calculate a student’s grade, check the validity of a credit card using the Luhn method, creating a valid credit card number, checking if the solution to a sudoku puzzle is right, using Quicksort, Making a Family Tree with a Binary Tree, and more. \r\n                    The one that I am most proud of because of the effort that I put on and how good it felt to debug and finally get right, was my method for creating a valid credit card number using the Luhn method.\r\n                </p>\r\n                <p>\r\n                    I was born in El Paso, Texas but lived in Mexico my whole life. \r\n                    I received my education prior to college in Mexico and learned from my Mexican culture great things like being a hard worker and having strong goals to work for. \r\n                    Transitioning to an American college has been easy, as the culture here in El Paso is a friendly mix of Mexico and the US. This has made me able to take the best of both worlds.\r\n                    My family is made up of computer scientists as well. My two older brothers are graduating this next December and May. \r\n                    I was aware that there was a big gap on the number of women and men majoring in computer science, and it has been very noticeable from the beginning. \r\n                    Yet, I don’t feel like being a woman has made my path any more difficult, on the contrary, I feel encouraged to show women that we can do it. \r\n                    I have felt very empowered by organizations, faculty, and companies like Google that promote women in CS.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Content } from '../Pages/Resume'\r\nimport './Toggle.css'\r\n\r\ninterface ToggleProps {\r\n    activeDoc: Content;\r\n    toggleDoc: (activeDoc:Content) => void;\r\n}\r\n\r\nexport default class Toggle extends React.Component<ToggleProps>{\r\n    render() {\r\n        const buttons = Object.values(Content);\r\n        return (\r\n            <div className=\"toggle\">\r\n                {buttons.map((option:Content)=> this.lineForActive(option))}\r\n            </div>\r\n        );\r\n    }    \r\n    private lineForActive(option:Content){\r\n        let style = \"\";\r\n        if(this.props.activeDoc === option){\r\n            style += \" active-btn\";\r\n        }\r\n        return(\r\n            <div className={style} key={option} onClick={() => this.props.toggleDoc(option)}> \r\n                {option}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport NavigationBar from './Components/NavigationBar'\r\nimport Home from './Pages/Home'\r\nimport AboutMe from './Pages/AboutMe'\r\nimport Resume from './Pages/Resume'\r\nimport './App.css';\r\n\r\nexport enum Pages{\r\n  Home = \"Home\",\r\n  AboutMe = \"About Me\",\r\n  Resume = \"Resume\"\r\n}\r\n\r\nclass App extends React.Component <{}, {activePage: Pages}>{\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = { activePage: Pages.Home };\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <NavigationBar activePage={this.state.activePage} changePage={(page:Pages) => this.changePage(page)}/>\r\n        <div className=\"App-content\">\r\n        {this.getPage()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  private getPage(){\r\n    switch(this.state.activePage){\r\n      case Pages.Home:\r\n        return <Home/>;\r\n      case Pages.AboutMe:\r\n        return <AboutMe/>;\r\n      case Pages.Resume:\r\n        return <Resume/>;\r\n    }\r\n  }\r\n  private changePage(nextPage:Pages){\r\n    this.setState({activePage: nextPage})\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}